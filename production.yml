version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

services:
  redis:
    image: redis:6

  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: blogsapp_production_django
    platform: linux/x86_64
    depends_on:
#      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    ports:
      - "80:80"
    command: /start

#  postgres:
#    build:
#      context: .
#      dockerfile: ./compose/production/postgres/Dockerfile
#    image: blogsapp_production_postgres
#    volumes:
#      - production_postgres_data:/var/lib/postgresql/data:Z
#      - production_postgres_data_backups:/backups:z
#    env_file:
#      - ./.envs/.production/.postgres
#    ports:
#      - "5433:5432"

#  nginx:
#    build: ./compose/production/nginx
#    ports:
#      - "80:80"
#    volumes:
#      - ./compose/production/nginx/:/etc/nginx/conf.d
##      - static:/static
#    depends_on:
#      - django

#  awscli:
#    build:
#      context: .
#      dockerfile: ./compose/production/aws/Dockerfile
#    env_file:
#      - ./.envs/.production/.django
#    volumes:
#      - production_postgres_data_backups:/backups:z

#  traefik:
#    build:
#      context: .
#      dockerfile: ./compose/production/traefik/Dockerfile
#    image: blogsapp_production_traefik
#    depends_on:
#      - django
#    volumes:
#      - production_traefik:/etc/traefik/acme:z
#    ports:
#      - "0.0.0.0:80:80"
#      - "0.0.0.0:443:443"
